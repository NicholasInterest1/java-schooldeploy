server.port=${PORT:2019}
# server.servlet.context-path=/apis

# Which db to run
#local.run.db=H2
local.run.db=POSTGRESQL

# postgres://tjrtkudzhkdqay:d39ff26d8dda6d5f39945d922c6cdb6d015e9d81c7fbf8ddc40a10f417414b63@ec2-54-235-180-123.compute-1.amazonaws.com:5432/d36ign00slsav8

# Environment Variables Needed for PostgreSQL database
# MYDBHOST
# MYDBNAME
# MYDBUSER
# MYDBPASSWORD

# Environment Variables Needed for OAuth2 Authentication Server
# OAUTHCLIENTID
# OAUTHCLIENTSECRET
# Find heroku info
# heroku config -a jrmmba-oauthmin
# postgres://rrwzjxlkniayov:83e8dc9dc5a3c3a30e40dde8fb62941da11030b3953709f5c8f808690e776c71@ec2-54-243-241-62.compute-1.amazonaws.com:5432/d7bl8dlv2l83jj
# postgres://bzhxqmxdgwigkw:611e5353ffd763b09aed8fad07d243e9bbf44e13f8f542330e3b862a1df47c92@ec2-54-221-243-211.compute-1.amazonaws.com:5432/d1blvk8nmshe0v
# postgres://usjecsqxvbvipn:4e5f8878fce3290c79bb4976b073d58e921261e283c6dd46ca48bfc3ab712e97@ec2-54-221-238-248.compute-1.amazonaws.com:5432/d5636ts64kgbvb
# posgress://username      :password                                                        @url                                      :5432/dbname

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.initialization-mode=never

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jackson.serialization.fail-on-empty-beans=false

server.error.whitelabel.enabled=false

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true

# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true